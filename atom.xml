<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZXZ Blog</title>
  
  <subtitle>学习的乐园</subtitle>
  <link href="https://xiaozhuzx.github.io/atom.xml" rel="self"/>
  
  <link href="https://xiaozhuzx.github.io/"/>
  <updated>2022-02-27T15:33:20.633Z</updated>
  <id>https://xiaozhuzx.github.io/</id>
  
  <author>
    <name>zxz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Object-oriented</title>
    <link href="https://xiaozhuzx.github.io/2022/02/27/Object-oriented/"/>
    <id>https://xiaozhuzx.github.io/2022/02/27/Object-oriented/</id>
    <published>2022-02-27T14:57:37.000Z</published>
    <updated>2022-02-27T15:33:20.633Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2022/02/27/Object-oriented/object.png" alt="object"></p><p>一、方法</p><p>1、按我的理解来看方法就像是C语言中的函数</p><p>2、成员方法的好处 </p><ol><li>提高代码的复用性 2.可以将实现的细节封装起来，然后供其他用户来调用即可</li></ol><p>3、成员方法的定义 </p><p>​    访问修饰符 返回数据类型 方法名（形参列表..） {//方法体 语句； return 返回值; }</p><p>4、方法调用机理</p><p>​    <img src="/2022/02/27/Object-oriented/function.png" alt="function"></p><p>5、方法使用细节</p><p>​    方法里面不能嵌套方法</p><p>​    同一类中直接调用，不同类中使用对象名.方法名调用</p><p>6、传参机制</p><p>​    基本数据类型传递的是值，形参的改变不影响实参</p><p>​    引用类型传递的是地址</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2022/02/27/Object-oriented/object.png&quot; alt=&quot;object&quot;&gt;&lt;/p&gt;
&lt;p&gt;一、方法&lt;/p&gt;
&lt;p&gt;1、按我的理解来看方法就像是C语言中的函数&lt;/p&gt;
&lt;p&gt;2、成员方法的好处 &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提</summary>
      
    
    
    
    <category term="java" scheme="https://xiaozhuzx.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://xiaozhuzx.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>streams</title>
    <link href="https://xiaozhuzx.github.io/2022/02/23/streams/"/>
    <id>https://xiaozhuzx.github.io/2022/02/23/streams/</id>
    <published>2022-02-23T15:50:53.000Z</published>
    <updated>2022-02-23T16:32:38.468Z</updated>
    
    <content type="html"><![CDATA[<h3 id="创建文件对象相关构造器和方法"><a href="#创建文件对象相关构造器和方法" class="headerlink" title="创建文件对象相关构造器和方法"></a>创建文件对象相关构造器和方法</h3><p><img src="/2022/02/23/streams/image-20220223235633172.png" alt="image-20220223235633172"></p><h4 id="韩顺平老师讲的创建文件三种方式："><a href="#韩顺平老师讲的创建文件三种方式：" class="headerlink" title="韩顺平老师讲的创建文件三种方式："></a>韩顺平老师讲的创建文件三种方式：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式1 new File(String pathname)</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">create01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String filePath = <span class="string">&quot;e:\\news1.txt&quot;</span>;</span><br><span class="line">    File file = <span class="keyword">new</span> File(filePath);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        file.createNewFile();</span><br><span class="line">        System.out.println(<span class="string">&quot;文件创建成功&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式2 new File(File parent,String child) //根据父目录文件+子路径构建</span></span><br><span class="line"><span class="comment">//e:\\news2.txt</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">create02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    File parentFile = <span class="keyword">new</span> File(<span class="string">&quot;e:\\&quot;</span>);</span><br><span class="line">    String fileName = <span class="string">&quot;news2.txt&quot;</span>;</span><br><span class="line">    <span class="comment">//这里的file对象，在java程序中，只是一个对象</span></span><br><span class="line">    <span class="comment">//只有执行了createNewFile 方法，才会真正的，在磁盘创建该文件</span></span><br><span class="line">    File file = <span class="keyword">new</span> File(parentFile, fileName);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        file.createNewFile();</span><br><span class="line">        System.out.println(<span class="string">&quot;创建成功~&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式3 new File(String parent,String child) //根据父目录+子路径构建</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">create03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//String parentPath = &quot;e:\\&quot;;</span></span><br><span class="line">    String parentPath = <span class="string">&quot;e:\\&quot;</span>;</span><br><span class="line">    String fileName = <span class="string">&quot;news4.txt&quot;</span>;</span><br><span class="line">    File file = <span class="keyword">new</span> File(parentPath, fileName);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        file.createNewFile();</span><br><span class="line">        System.out.println(<span class="string">&quot;创建成功~&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="获取文件的相关信息"><a href="#获取文件的相关信息" class="headerlink" title="获取文件的相关信息"></a>获取文件的相关信息<img src="/2022/02/23/streams/file.png" alt="屏幕截图 2022-02-24 002430"></h4><p>1.先创建文件对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File file = <span class="keyword">new</span> File(<span class="string">&quot;  &quot;</span>);</span><br></pre></td></tr></table></figure><p>2.调用相应的方法获取文件信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//调用相应的方法，得到对应信息</span></span><br><span class="line">System.out.println(<span class="string">&quot;文件名字=&quot;</span> + file.getName());</span><br><span class="line"><span class="comment">//getName、getAbsolutePath、getParent、length、exists、isFile、isDirectory</span></span><br><span class="line">System.out.println(<span class="string">&quot;文件绝对路径=&quot;</span> + file.getAbsolutePath());</span><br><span class="line">System.out.println(<span class="string">&quot;文件父级目录=&quot;</span> + file.getParent());</span><br><span class="line">System.out.println(<span class="string">&quot;文件大小(字节)=&quot;</span> + file.length());</span><br><span class="line">System.out.println(<span class="string">&quot;文件是否存在=&quot;</span> + file.exists());<span class="comment">//T</span></span><br><span class="line">System.out.println(<span class="string">&quot;是不是一个文件=&quot;</span> + file.isFile());<span class="comment">//T</span></span><br><span class="line">System.out.println(<span class="string">&quot;是不是一个目录=&quot;</span> + file.isDirectory());<span class="comment">//F</span></span><br></pre></td></tr></table></figure><h4 id="目录操作及文件删除"><a href="#目录操作及文件删除" class="headerlink" title="目录操作及文件删除"></a>目录操作及文件删除</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断 d:\\news1.txt 是否存在，如果存在就删除</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m1</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String filePath = <span class="string">&quot;e:\\news1.txt&quot;</span>;</span><br><span class="line">    File file = <span class="keyword">new</span> File(filePath);</span><br><span class="line">    <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (file.delete()) &#123;</span><br><span class="line">            System.out.println(filePath + <span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(filePath + <span class="string">&quot;删除失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;该文件不存在...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断 D:\\demo02 是否存在，存在就删除，否则提示不存在</span></span><br><span class="line"><span class="comment">//这里我们需要体会到，在java编程中，目录也被当做文件</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m2</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String filePath = <span class="string">&quot;D:\\demo02&quot;</span>;</span><br><span class="line">    File file = <span class="keyword">new</span> File(filePath);</span><br><span class="line">    <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (file.delete()) &#123;</span><br><span class="line">            System.out.println(filePath + <span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(filePath + <span class="string">&quot;删除失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;该目录不存在...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断 D:\\demo\\a\\b\\c 目录是否存在，如果存在就提示已经存在，否则就创建</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">m3</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String directoryPath = <span class="string">&quot;D:\\demo\\a\\b\\c&quot;</span>;</span><br><span class="line">    File file = <span class="keyword">new</span> File(directoryPath);</span><br><span class="line">    <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">        System.out.println(directoryPath + <span class="string">&quot;存在..&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (file.mkdirs()) &#123; <span class="comment">//创建一级目录使用mkdir() ，创建多级目录使用mkdirs()</span></span><br><span class="line">            System.out.println(directoryPath + <span class="string">&quot;创建成功..&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(directoryPath + <span class="string">&quot;创建失败...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;创建文件对象相关构造器和方法&quot;&gt;&lt;a href=&quot;#创建文件对象相关构造器和方法&quot; class=&quot;headerlink&quot; title=&quot;创建文件对象相关构造器和方法&quot;&gt;&lt;/a&gt;创建文件对象相关构造器和方法&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2022/02/23/</summary>
      
    
    
    
    <category term="java" scheme="https://xiaozhuzx.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://xiaozhuzx.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github</title>
    <link href="https://xiaozhuzx.github.io/2022/01/13/hexo-github/"/>
    <id>https://xiaozhuzx.github.io/2022/01/13/hexo-github/</id>
    <published>2022-01-13T13:49:39.000Z</published>
    <updated>2022-02-23T16:13:41.725Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用hexo-github制作个人博客"><a href="#利用hexo-github制作个人博客" class="headerlink" title="利用hexo+github制作个人博客"></a>利用hexo+github制作个人博客</h1><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p> 新建一个仓库，名称为username.github.io，此处的username要与前面的用户名保持一致，并且必须配置SSH链接，要不然hexo d会失败。</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>  在官网下载Node.js,配置好环境变量，能使用npm命令</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><h4 id="安装命令："><a href="#安装命令：" class="headerlink" title="安装命令："></a>安装命令：</h4><p>  <code> npm install -g hexo-cli</code><br>   安装完成之后配置好环境变量，能使用hexo命令</p><h4 id="初始化、生成并部署项目"><a href="#初始化、生成并部署项目" class="headerlink" title="初始化、生成并部署项目"></a>初始化、生成并部署项目</h4><p>  <code> 1. hexo init &#123;name&#125;</code><br>   2. 进入name文件夹，输入命令如下<br>      <code> hexo generate</code><br>       生成了静态网页<br>   3. 本地运行，命令如下：<br>       <code> hexo s</code><br>        可以在本地查看博客站点了<br>   4. 部署项目，命令如下：<br>        hexo deploy<br>        项目就可以通过自己的username.github.io访问</p><h2 id="增加项目"><a href="#增加项目" class="headerlink" title="增加项目"></a>增加项目</h2><blockquote><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><p> <code> hexo new helloworld</code></p><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p><code>  hexo new page tags</code></p><h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><p><code>  hexo new page categories</code></p><h3 id="修改主题的-config-yml"><a href="#修改主题的-config-yml" class="headerlink" title="修改主题的_config.yml"></a>修改主题的_config.yml</h3><p>  <img src="/2022/01/13/hexo-github/menu.png" title="_config.yml里面的menu编辑区"><br>   去掉tags和categories前面的“#”即可添加标签页和分类页</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;利用hexo-github制作个人博客&quot;&gt;&lt;a href=&quot;#利用hexo-github制作个人博客&quot; class=&quot;headerlink&quot; title=&quot;利用hexo+github制作个人博客&quot;&gt;&lt;/a&gt;利用hexo+github制作个人博客&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="website" scheme="https://xiaozhuzx.github.io/categories/website/"/>
    
    
    <category term="website" scheme="https://xiaozhuzx.github.io/tags/website/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xiaozhuzx.github.io/2022/01/03/hello-world/"/>
    <id>https://xiaozhuzx.github.io/2022/01/03/hello-world/</id>
    <published>2022-01-03T15:09:54.907Z</published>
    <updated>2022-01-05T14:42:55.259Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
